<!DOCTYPE html>
<html lang="pt-br">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Adicionar Pizza</title>
    <base href="/">
    <link rel="stylesheet" type="text/css" href="/templates/css/liststyle.css">
    <link rel="stylesheet" type="text/css" href="/templates/css/global.css">
    <link rel="stylesheet" type="text/css" href="/templates/css/produto.css">
    <link rel="stylesheet" href="/templates/css/estilo.css">

    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-maskmoney/3.0.1/jquery.maskMoney.min.js"></script>
    <style>
        label {
            color: white !important;
            margin-bottom: 0% !important;
        }
        
        input {
            background-color: white !important;
            color: black !important;
        }
        
        .trinta {
            width: 30% !important;
        }
        
        .search {
            position: relative;
            color: #aaa;
            font-size: 16px;
            width: 100%;
        }
        
        .search {
            display: inline-block;
        }
        
        .search input {
            width: 100% !important;
        }
        
        .search .fa-search {
            position: absolute;
            right: 3% !important;
            top: 11%;
        }
        
        @media only screen and (max-width:1200px) {
            .search .fa-search {
                right: 4% !important;
            }
        }
        
        @media only screen and (max-width:760px) {
            .search .fa-search {
                right: 5% !important;
            }
        }
        
        @media only screen and (max-width:570px) {
            .search .fa-search {
                right: 7% !important;
            }
        }
        
        .search .fa-search {
            left: auto;
            right: 10px;
        }
        
        input[list] {
            background: red;
        }
        
        input::-webkit-calendar-picker-indicator {
            display: none;
        }
        
        .active {
            padding: 0px 0px !important;
        }
        
        div.table {
            width: 100% !important;
            margin-left: 0 !important;
            height: 40vh;
            max-height: 40vh;
            align-items: baseline !important;
            overflow-y: scroll;
        }
        
        input.fatias {
            width: 100% !important;
        }
        
        button.fixed {
            position: absolute;
            right: 6.5%;
            bottom: -3%;
            background-color: green;
        }
    </style>
</head>

<body>
    <%- include('../componentes/menu.ejs'); -%>
        <div class="container1">
            <div class="container-form">
                <div id="#responsive" class="itens">
                    <div class="informations">
                        <header style="padding-bottom: 2%;font-size: 24pt;">Adicionar Pizza</header>
                        <main>
                            <div class="row">
                                <fieldset class='float-label-field'>
                                    <label for="quantidade">Quantidade de Fatias</label>
                                    <input id="quantidade" class='campo-texto trinta' required placeholder="Quantidade de Fatias" value="8" name="quantidade" type='number'>
                                </fieldset>
                            </div>
                            <div class="row" style="align-items: baseline !important; flex-direction: column !important;">
                                <label for="">Pizzas</label>
                                <div class="wrapper" style="margin-left: 0px !important;">
                                    <div class="search-input">
                                        <input autocomplete="off" type="text" name="search" id="search" placeholder="Pesquisar Pizza">
                                        <div class="autocom-box">
                                            <li>Teste 1</li>
                                            <li>Teste 2</li>
                                        </div>
                                        <span class="fa fa-search icon">
                                        <svg xmlns="http://www.w3.org/2000/svg" width="17.968" height="29.001" viewBox="0 0 32.968 29.001">
                                            <g id="Grupo_18" data-name="Grupo 18" transform="translate(-1247 -318)">
                                              <g id="Elipse_2" data-name="Elipse 2" transform="translate(1247 318)" fill="none" stroke="#000459" stroke-width="4">
                                                <circle cx="12.5" cy="12.5" r="12.5" stroke="none"/>
                                                <circle cx="12.5" cy="12.5" r="10.5" fill="none"/>
                                              </g>
                                              <path id="Caminho_5" data-name="Caminho 5" d="M1268.96,337.5l9.744,7.951" fill="none" stroke="#000459" stroke-width="4"/>
                                            </g>
                                          </svg>
                                    </span>
                                    </div>
                                </div>
                                <div class="row table">
                                    <table class="itens">
                                        <thead>
                                            <th>Código</th>
                                            <th>Nome</th>
                                            <th>Fatias</th>
                                            <th>Valor</th>
                                            <th>Observação</th>
                                        </thead>
                                        <tbody></tbody>
                                    </table>
                                </div>
                            </div>
                        </main>
                    </div>
                </div>
            </div>
            <button class="fixed" onclick="validate();">Adicionar</button>
        </div>
        <script>
            var suggestions = [];
            var valores = [];
            var adicionados = [];
            <% produtos.forEach(function(produto){ %>
            suggestions.push({
                _id: '<%=produto._id%>',
                codigo: '<%=produto.codigo%>',
                name: '<%=produto.name%>',
                quantidade: '<%=produto.quantidade%>',
                precoVenda: '<%= delivery ?  25.0: produto.precoVenda%>'
            });

            valores.push({
                _id: '<%=produto._id%>',
                codigo: '<%=produto.codigo%>',
                name: '<%=produto.name%>',
                quantidade: '<%=produto.quantidade%>',
                precoVenda: '<%= delivery ?  25.00: produto.precoVenda%>',
                precoVendaQuatro: '<%= delivery ?  25.00: produto.precoVendaQuatro%>',
                precoVendaSeis: '<%= delivery ?  25.00: produto.precoVendaSeis%>',
                precoVendaOito: '<%= delivery ?  25.00: produto.precoVendaOito%>',
                precoVendaDez: '<%= delivery ?  25.00: produto.precoVendaDez%>'
            });

            <% }); %>

            function getValueForFatias(quant, id) {
                for (let index = 0; index < valores.length; index++) {
                    const element = valores[index];
                    if (element._id == id) {
                        console.log(quant, element);
                        switch (quant) {
                            case '4':
                                return element.precoVendaQuatro;
                                break;
                            case '6':
                                return element.precoVendaSeis;
                                break;
                            case '8':
                                return element.precoVendaOito;
                                break;
                            case '10':
                                return element.precoVendaDez;
                                break;
                        }
                    }
                }
                return 0;
            }

            const searchWrapper = document.querySelector('.search-input');
            const inputBox = searchWrapper.querySelector('input');
            const suggBox = searchWrapper.querySelector('.autocom-box');

            inputBox.onkeyup = (e) => {
                let userData = e.target.value;
                let emptyArray = [];
                if (userData) {
                    emptyArray = suggestions.filter((data) => {
                        return data.name.toLocaleLowerCase().includes(userData.toLocaleLowerCase());
                    });
                    emptyArray = emptyArray.map((data) => {
                        return data = `<li onclick="addItem('${data._id}');">${data.name}</li>`;
                    });
                    searchWrapper.classList.add('active');
                } else {
                    searchWrapper.classList.remove('active');
                }
                showSuggestions(emptyArray);
            };

            function showSuggestions(list) {
                let listData;
                if (!list.length) {
                    listData = '<li>Nenhum Item Encontrado</li>';
                } else {
                    listData = list.join('');
                }
                suggBox.innerHTML = listData;
            }

            function addItem(id) {
                let item = getItemById(id);
                item.observacao = "";
                let quantFatias = document.querySelector('input[name=quantidade]').value;

                item.precoVenda = getValueForFatias(quantFatias, id);
                console.log(item);

                if (typeof getExistsById(item._id) == 'undefined') {

                    let table = document.querySelector('table.itens tbody');
                    let tr = document.createElement('tr');
                    tr.setAttribute('id', `id_${item._id}`);
                    table.appendChild(tr);
                    for (var prop in item) {
                        if (item.hasOwnProperty(prop)) {
                            if (prop != '_id') {
                                console.log(item[prop], prop);
                                let td = document.createElement('td');
                                if (prop == 'quantidade') {
                                    let input = document.createElement('input');
                                    input.setAttribute('class', 'campo-texto fatias');
                                    input.setAttribute('type', 'number');
                                    input.setAttribute('size', '3');
                                    input.value = 0;
                                    td.appendChild(input);
                                    td.style.width = '20%';
                                    tr.appendChild(td);
                                } else {
                                    if (prop == 'precoVenda') {
                                        let input = document.createElement('input');
                                        input.setAttribute('class', 'campo-texto precos money');
                                        input.setAttribute('type', 'text');
                                        input.setAttribute('size', '3');
                                        input.value = Number.parseFloat(item[prop]).toFixed(2);
                                        td.appendChild(input);
                                        td.style.width = '20%';
                                        tr.appendChild(td);
                                    } else {
                                        if (prop == 'observacao') {
                                            let input = document.createElement('input');
                                            input.setAttribute('class', 'campo-texto observacao');
                                            input.setAttribute('type', 'text');
                                            input.style.width = "100%";
                                            td.appendChild(input);
                                            td.style.width = '30%';
                                            tr.appendChild(td);
                                        } else {
                                            let text = document.createTextNode(item[prop]);
                                            td.appendChild(text);
                                            tr.appendChild(td);
                                        }
                                    }
                                }
                            }
                        }
                    }
                    adicionados.push(item);
                }
                searchWrapper.classList.remove('active');
                $(".money").maskMoney({
                    prefix: '',
                    // allowNegative: true,
                    thousands: '.',
                    decimal: ',',
                    allowZero: false,
                    defaultZero: false
                });
                $('.money').each(function() { // function to apply mask on load!
                    $(this).maskMoney('mask', $(this).val());
                });
            }

            function getItemById(id) {
                return suggestions.find(x => x._id == id);
            }

            function getExistsById(id) {
                return adicionados.find(x => x._id == id);
            }

            function getDecimalFromFormatBrazil(value) {
                String.prototype.replaceAll = String.prototype.replaceAll || function(needle, replacement) {
                    return this.split(needle).join(replacement);
                };
                value = value.replaceAll('.', '');
                value = value.replace(',', '.');
                return value;
            }

            function atualizaFatias() {
                for (let index = 0; index < adicionados.length; index++) {
                    const element = adicionados[index];
                    let newPreco = document.querySelector(`table.itens tbody tr#id_${element._id} td input.precos`).value;
                    // console.log(newPreco);
                    adicionados[index].precoVenda = getDecimalFromFormatBrazil(newPreco);
                }
            }

            function openWindowWithPost(url, datas) {
                var form = document.createElement("form");
                form.target = "_blank";
                form.method = "POST";
                form.action = url;
                form.style.display = "none";

                for (const data of datas) {
                    //for (var key in data) {
                    var input = document.createElement("input");
                    input.type = "hidden";
                    input.name = "ids[]";
                    input.value = data._id;
                    form.appendChild(input);
                    //}   
                }

                document.body.appendChild(form);
                form.submit();
                document.body.removeChild(form);
            }

            function addPizza() {
                atualizaFatias();
                // console.log(adicionados);return;
                let quantFatias = document.querySelector('input[name=quantidade]').value;
                let maxCallback = (acc, cur) => Math.max(acc.precoVenda, cur.precoVenda);
                let preco = (adicionados.length == 1) ? adicionados[0].precoVenda : adicionados.reduce(maxCallback);
                let produtos = adicionados.map(a => a._id);
                let pizzas = [];
                for (let index = 0; index < produtos.length; index++) {
                    const element = produtos[index];
                    //console.log(element);
                    let fatias = document.querySelector(`table.itens tbody tr#id_${element} td input.fatias`).value;
                    let observacao = document.querySelector(`table.itens tbody tr#id_${element} td input.observacao`).value;
                    let item = {
                        fatias: fatias,
                        observacao: observacao,
                        valor: getExistsById(element).precoVenda,
                        produto: element
                    };
                    pizzas.push(item);
                }
                let data = {
                    quantidade: quantFatias,
                    valorUnitario: preco,
                    pizzas: pizzas
                };
                console.log(data);

                $.ajax({
                    type: 'PUT',
                    url: '/financeiro/addpizza/' + '<%=idCaixa%>',
                    contentType: 'application/json',
                    data: JSON.stringify(data), // access in body
                }).done(function(datas) {
                    console.log(datas);
                    $.ajax({
                        type: 'GET',
                        url: '/relatorio/impressao/impressaopizza/' + datas._id,
                        contentType: 'application/json' // access in body
                    }).done(function(da) {
                        console.log(da);

                        window.location = '/financeiro/caixa/' + '<%=idCaixa%>';
                    }).fail(function(msg) {
                        console.log('FAIL');
                        window.location = '/financeiro/caixa/' + '<%=idCaixa%>';
                    }).always(function(msg) {
                        console.log('ALWAYS');
                    });
                    //window.location = '/financeiro/caixa/' + '<%=idCaixa%>';
                }).fail(function(msg) {
                    console.log('FAIL');
                    failure();
                }).always(function(msg) {
                    console.log('ALWAYS');
                });
            }

            function validate() {
                if (adicionados.length == 0) {
                    alert("Adicione pelo menos um sabor");
                    return false;
                }
                let quantFatias = document.querySelector('input[name=quantidade]').value;
                let sumFatias = 0;
                for (let index = 0; index < adicionados.length; index++) {
                    const element = adicionados[index];
                    //console.log(document.querySelector(`#id_${element._id} .fatias`), document.querySelector(`#id_${element._id} .fatias`).value);
                    sumFatias += Number(document.querySelector(`#id_${element._id} .fatias`).value);
                }
                if (quantFatias != sumFatias) {
                    alert("Soma das fatias é diferente da quantidade de fatias!");
                    return false;
                }
                addPizza();
            }
        </script>
        <%- include('../componentes/rodape.ejs'); -%>
</body>

</html>